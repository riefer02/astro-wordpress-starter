services:
  wordpress:
    image: wordpress:latest
    ports:
      - '8080:80'
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST:-db}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
      # Auto-configure WordPress on first run
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_DEBUG', true);
        define('WP_DEBUG_LOG', true);
        define('WP_DEBUG_DISPLAY', false);
        define('FORCE_SSL_ADMIN', false);
        define('WP_AUTO_UPDATE_CORE', false);
        // JWT Authentication configuration
        define('JWT_AUTH_SECRET_KEY', 'your-secret-key-for-development-only-change-in-production');
        define('JWT_AUTH_CORS_ENABLE', true);
    volumes:
      - wp_files:/var/www/html
      - ./uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      - ./wp-content:/var/www/html/wp-content
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - wp-network
    env_file:
      - ../.env

  db:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - '3328:3306'
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test:
        [
          'CMD',
          'mysqladmin',
          'ping',
          '-h',
          'localhost',
          '-u',
          '${MYSQL_USER}',
          '-p${MYSQL_PASSWORD}',
        ]
      timeout: 10s
      retries: 5
      interval: 10s
      start_period: 30s
    restart: unless-stopped
    networks:
      - wp-network
    env_file:
      - ../.env

  # Optional: WordPress CLI for management
  wp-cli:
    image: wordpress:cli
    volumes:
      - wp_files:/var/www/html
      - ./wp-content:/var/www/html/wp-content
    environment:
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST:-db}
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
    networks:
      - wp-network
    profiles:
      - cli
    env_file:
      - ../.env

networks:
  wp-network:
    driver: bridge

volumes:
  db_data:
  wp_files:
